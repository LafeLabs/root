<script src = "https://cdnjs.cloudflare.com/ajax/libs/hammer.js/2.0.8/hammer.js"></script>

<p>
    <a id = "flowdecklink" href="../deck/index.php?path=map/flowchart/">Link Back to Flow Deck</a>
</p>
<div class = "button" id = "backbutton">BACK</div>
<div class = "button" id = "fwdbutton">FWD</div>
<div class = "button" id = "publishbutton">PUBLISH</div>
<table id = "markertable">
    <tr>
        <td></td>
    </tr>
    <tr>
        <td></td>
    </tr>
</table>
<img id = "mainImage"/>
<table id = "pantable">
    <tr><td>PAN X</td></tr>
    <tr><td>PAN Y</td></tr>
    <tr><td>IMG ZOOM</td></tr>
    <tr><td>PX ZOOM</td></tr>
    <tr><td>ROTATE</td></tr>
</table>
<canvas id = "mainCanvas"></canvas>

<script>

markers = document.getElementById("markertable").getElementsByTagName("TD");

path = document.getElementById("pathdiv").innerHTML;
jsondata = JSON.parse(document.getElementById("jsondata").innerHTML);
mapIndex = 0;
document.getElementById("mainImage").src = jsondata[mapIndex].imgurl;
markers[0].innerHTML = jsondata[mapIndex].marker0;
markers[1].innerHTML = jsondata[mapIndex].marker1;
unitfeet = 555;
unitpixels = 20;
imgw = 20;
imgleft = -0.5*imgw;
imgtop = -0.5*imgw;
imgangle = 0;
x0 = 0.5*innerWidth;
y0 = 0.5*innerHeight;
x = x0;
y = y0;

ctx = document.getElementById("mainCanvas").getContext("2d");
ctx.strokeStyle= "black";
ctx.lineWidth = 4;    	
ctx.fillStyle = "black";
document.getElementById("mainCanvas").width = innerWidth;
document.getElementById("mainCanvas").height = innerHeight;

redraw();
function redraw(){
    x = x0;
    y = y0;
    
    ctx.clearRect(0,0,innerWidth,innerHeight);
    ctx.lineWidth = 6;    	
    ctx.beginPath();
    ctx.arc(x, y, ctx.lineWidth, 0, 2 * Math.PI);
    ctx.fill();	
    ctx.closePath();
    x = x0 + unitpixels*parseFloat(latlon2xy(jsondata[mapIndex].latlon1).split(",")[0]);
    y = y0 + unitpixels*parseFloat(latlon2xy(jsondata[mapIndex].latlon1).split(",")[1]);
    ctx.beginPath();
    ctx.arc(x, y, ctx.lineWidth, 0, 2 * Math.PI);
    ctx.fill();	
    ctx.closePath();

    document.getElementById("mainImage").style.width = (imgw*unitpixels).toString()  + "px";
    document.getElementById("mainImage").style.left = (x0 + imgleft*unitpixels).toString()  + "px";
    document.getElementById("mainImage").style.top = (y0 + imgtop*unitpixels).toString()  + "px";
    document.getElementById("mainImage").style.transform = "rotate(" + imgangle.toString() +"deg)";

}

pans = document.getElementById("pantable").getElementsByTagName("TD");

mc1 = new Hammer(pans[0]);
mc1.get('pan').set({ direction: Hammer.DIRECTION_ALL });
mc1.on("panleft panright panup pandown tap press", function(ev) {
    imgleft = -0.5*imgw + ev.deltaX;
    redraw();
});

mc2 = new Hammer(pans[1]);
mc2.get('pan').set({ direction: Hammer.DIRECTION_ALL });
mc2.on("panleft panright panup pandown tap press", function(ev) {
    imgtop = -0.5*imgw + ev.deltaX;
    redraw();
});

mc3 = new Hammer(pans[2]);
mc3.get('pan').set({ direction: Hammer.DIRECTION_ALL });
mc3.on("panleft panright panup pandown tap press", function(ev) {
    var tempimgw = imgw;
    imgw = 150 + ev.deltaX;
    deltaimgw = imgw - tempimgw;
    imgleft -= 0.5*deltaimgw;
    imgtop -= 0.5*deltaimgw;
    redraw();
});

mc4 = new Hammer(pans[3]);
mc4.get('pan').set({ direction: Hammer.DIRECTION_ALL });
mc4.on("panleft panright panup pandown tap press", function(ev) {
    unitpixels = 5 +  ev.deltaX/10;
    redraw();
});


mc5 = new Hammer(pans[4]);
mc5.get('pan').set({ direction: Hammer.DIRECTION_ALL });
mc5.on("panleft panright panup pandown tap press", function(ev) {
    imgangle = ev.deltaX;
    redraw();
});


document.getElementById("publishbutton").onclick = function(){

    jsonoutput = {};
    jsonoutput.imgurl = jsondata[mapIndex].imgurl;
    jsonoutput.marker0 = jsondata[mapIndex].marker0;
    jsonoutput.marker1 = jsondata[mapIndex].marker1;
    jsonoutput.latlon0 = jsondata[mapIndex].latlon0;
    jsonoutput.latlon1 = jsondata[mapIndex].latlon1;

    jsonoutput.imgw = imgw;
    jsonoutput.imgleft = imgleft;
    jsonoutput.imgtop = imgtop;
    jsonoutput.unitpixels = unitpixels;
    jsonoutput.unitfeet = unitfeet;
    jsonoutput.imgangle = imgangle;


    timestamp = Math.round((new Date().getTime())/1000);
    data = encodeURIComponent(JSON.stringify(jsonoutput,null,"    "));
    var httpc = new XMLHttpRequest();
    var url = "filesaver.php";        
    httpc.open("POST", url, true);
    httpc.setRequestHeader("Content-Type", "application/x-www-form-urlencoded;charset=utf-8");
    httpc.send("data=" + data + "&filename=" + path + "json/json" + timestamp + ".txt");//send text to filesaver.php
    
    var httpc = new XMLHttpRequest();
    var url = "makejsonindex.php?path=" + path;        
    httpc.open("GET", url, true);
    httpc.setRequestHeader("Content-Type", "application/x-www-form-urlencoded;charset=utf-8");
    httpc.send();//send text to filesaver.php
    
}

document.getElementById("fwdbutton").onclick = function(){
    mapIndex++;
    if(mapIndex >= jsondata.length){
        mapIndex = 0;
    }
    document.getElementById("mainImage").src = jsondata[mapIndex].imgurl;

}
document.getElementById("backbutton").onclick = function(){
    mapIndex--;
    if(mapIndex < 0){
        mapIndex = jsondata.length - 1;
    }
    document.getElementById("mainImage").src = jsondata[mapIndex].imgurl;

}
function latlon2xy(latlonin) {
    
    //input to this function is a string of the form "lattitude,longitude", where lat and lon are in decimal degrees
    var lat0 = parseFloat(jsondata[mapIndex].latlon0.split(",")[0]);   //lattitude to 10 meter precision
    var coslat = Math.cos(lat0*Math.PI/180);//convert to radians, take cosine of lattitude
    var lon0 =  parseFloat(jsondata[mapIndex].latlon0.split(",")[1]);//longitude to 10 meter precision
    var digits = 2;//1;//0 digits = 555 feet, 1 is 55 feet, 2 is 5.5  feet
    var precision = Math.pow(10,digits);
    var lat1 = parseFloat(latlonin.split(",")[0]);
    var lon1 = parseFloat(latlonin.split(",")[1]);
    //from the original definition of the meter:
    //90 degrees lattitude = 10,000,000 meters = 32808399 feet
    //1 degree lattitude = 10,000,000 meters/90 = 111111.1 meters = 111 km
    //0.1 degree = 11 km
    //0.01 degree = 1.1 km
    //0.001 degree = 110 m
    //0.0001 degree = 11 m
    //1 meter = 3.28084 feet
    //1 degree lattitude = 111111.1(meters)*3.28084(feet/meter) = 364538 feet
    //1 degree longitude = 1 degre lattitude X cos(lattitude) = 283699 feet at 38.8895 N
    var deltaxfeet = Math.round((lon1 - lon0)*364538*coslat);//convert longitude difference to feet
    var deltayfeet = Math.round((lat1 - lat0)*364538);//convert lattitude difference to feet
    var deltax = Math.round(precision*deltaxfeet/unitfeet)/precision;//convert from feet to "units" based on unitfeet
    var deltay = Math.round(precision*deltayfeet/unitfeet)/precision;//convert from feet to "units" based on unitfeet
    return deltax.toString() + "," + deltay.toString();
}

</script>
<style>
#pantable{
    position:absolute;
    right:0px;
    z-index:2;
}
#pantable td{
    width:400px;
    height:80px;
    text-align:center;
    border:solid;
}
p{
    text-align:right;
}
#inputtable{
    position:absolute;
    top:1em;
    left:1em;
    z-index:2;
}
input{
    width:20em;
    font-size:22px;
}

a{
    z-index:3;
}
#mainCanvas{
    position:absolute;
    z-index:0;
    left:0px;
    top:0px;
}
#mainImage{
   position:absolute;
   z-index:-1;
}
#backbutton{
    position:absolute;
    left:0px;
    bottom:0px;
    z-index:3;
}
#fwdbutton{
    position:absolute;
    right:0px;
    bottom:0px;
    z-index:3;
}
#publishbutton{
    position:absolute;
    z-index:3;
}
#flowdecklink{
    position:relative;
    z-index:3;
}
.button{
    cursor:pointer;
    text-align:center;
    height:4em;
    padding-top:2em;
    padding-left:2em;
    padding-right:2em;
}
.button:hover{
    background-color:green;
}
.button:active{
    background-color:yellow;
}
#markertable{
    position:absolute;
    left:0px;
    top:50%;
}
</style>
