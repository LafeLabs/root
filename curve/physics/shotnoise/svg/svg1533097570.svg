<svg width="400" height="400" viewbox = "0 0 400 400"  xmlns="http://www.w3.org/2000/svg">

<!--
<topfunctions>









function YofX(){
    X = plotparams.g*(x - plotparams.x0) - funcparams.X0;
    if(X == 0){
        Y = funcparams.G*(funcparams.Tn + funcparams.T);
    }   
    else{
        Y = funcparams.G*(funcparams.Tn +  X/Math.tanh(X/funcparams.T));
    }
    y = plotparams.y0 - plotparams.G*(Y - funcparams.Y0);
}



function plotfunction(){
/*

    currentStroke = "blue";
    currentLineWidth = 4;
    ctx.strokeStyle = currentStroke;
    ctx.lineWidth = currentLineWidth;
    ctx.beginPath();	
    x = 0;
    y = 0;
    t= 0;
    XYofT();
    currentSVG += "	<path d = \"M";
    currentSVG += Math.round(x).toString() + " ";
    currentSVG += Math.round(y).toString() + " ";
    for(t = 1;t < plotparams.duration;t++){
        ctx.moveTo(x,y);
        XYofT();
        ctx.lineTo(x,y);
        currentSVG += "L" + x + " " + y + " ";
    }
    ctx.stroke();
    currentSVG += "\""+ " stroke = \"" + currentStroke + "\" stroke-width = \"" + currentLineWidth.toString() + "\" fill = \"" + "none" + "\" "+"/>";


    /*plot one function:*/
    currentStroke = "blue";
    currentLineWidth = 4;
    ctx.strokeStyle = currentStroke;
    ctx.lineWidth = currentLineWidth;
    ctx.beginPath();	
    x = 0;
    YofX();
    currentSVG += "	<path d = \"M";
    currentSVG += Math.round(x).toString() + " ";
    currentSVG += Math.round(y).toString() + " ";
    for(x = 1;x < plotparams.plotwidth;x++){
        ctx.moveTo(x-1,y);
        YofX();
        ctx.lineTo(x,y);
        currentSVG += "L" + x + " " + y + " ";
    }
    ctx.stroke();
    currentSVG += "\""+ " stroke = \"" + currentStroke + "\" stroke-width = \"" + currentLineWidth.toString() + "\" fill = \"" + "none" + "\" "+"/>";
    /*finish plot one function*/
    

}






























</topfunctions>
-->

<!--
<imgurl>

</imgurl>
-->

<!--
<currentjson>
{
    "constants": {},
    "imgurl": "",
    "plotparams": {
        "G": 21.935878491400615,
        "g": 0.06830134553650705,
        "duration": 545.4545454545454,
        "plotwidth": 400,
        "plotheight": 400,
        "x0": 200,
        "y0": 400
    },
    "funcparams": {
        "T": 1.6105100000000003,
        "Tn": 5.644739300537772,
        "G": 1,
        "X0": 0,
        "Y0": 0
    }
}
</currentjson>
-->

<!--
<equation>





<h2>X  times Hyperbolic Cotangent</h2>
<p style="color:blue">

</p><p class="bigeq">
$$
Y = X\coth{X}$$
</p>
<p></p>

$$
X = g(x - x_0) - X_0
$$
$$
Y = f(X)
$$
    
$$
y = y_0 - G(Y - Y_0)
$$


<p>
    X and Y, and $X_0$ and $Y_0$ in physical units of the System. x and y and x0 and y0 in pixels.  G is in pixels per Y unit and g is in X units per pixel. 
</p>






</equation>
-->
	<path d = "M0 -23 L1 -21.974096552871572 L2 -20.47584885013572 L3 -18.977601338725094 L4 -17.479354034381515 L5 -15.981106954135043 L6 -14.482860116407835 L7 -12.984613541127999 L8 -11.4863672498509 L9 -9.98812126589172 L10 -8.489875614468247 L11 -6.9916303228542915 L12 -5.493385420547099 L13 -3.995140939445946 L14 -2.496896914047909 L15 -0.9986533816561405 L16 0.4995896173923029 L17 1.9978320394823186 L18 3.4960738374565494 L19 4.994314960329575 L20 6.492555352980105 L21 7.990794955818046 L22 9.489033704425424 L23 10.987271529168595 L24 12.4855083547792 L25 13.983744099902935 L26 15.48197867661139 L27 16.980211989875784 L28 18.478443936998872 L29 19.976674407001894 L30 21.474903279963428 L31 22.973130426305374 L32 24.471355706023132 L33 25.969578967855284 L34 27.467800048387403 L35 28.966018771086055 L36 30.46423494525635 L37 31.962448364918146 L38 33.460658807594484 L39 34.958866033004654 L40 36.457069781655605 L41 37.95526977332332 L42 39.453465705416136 L43 40.951657251210065 L44 42.44984405794838 L45 43.94802574479144 L46 45.446201900610276 L47 46.944372081607696 L48 48.44253580875619 L49 49.94069256503849 L50 51.438841792475046 L51 52.93698288892335 L52 54.43511520463136 L53 55.93323803852718 L54 57.431350634223975 L55 58.92945217572088 L56 60.42754178277539 L57 61.92561850592381 L58 63.42368132112341 L59 64.92172912398877 L60 66.41976072359125 L61 67.91777483579114 L62 69.41577007606656 L63 70.91374495180389 L64 72.41169785400882 L65 73.90962704839797 L66 75.40753066582391 L67 76.90540669198748 L68 78.40325295638524 L69 79.90106712043672 L70 81.39884666473438 L71 82.89658887535211 L72 84.394290829147 L73 85.89194937798248 L74 87.38956113179688 L75 88.88712244043762 L76 90.38462937417364 L77 91.88207770279513 L78 93.37946287320312 L79 94.87677998538481 L80 96.37402376666398 L81 97.87118854411005 L82 99.36826821498101 L83 100.86525621506678 L84 102.36214548479467 L85 103.8589284329471 L86 105.35559689783338 L87 106.85214210575077 L88 108.34855462655588 L89 109.84482432616147 L90 111.34094031576075 L91 112.8368908975715 L92 114.33266350687967 L93 115.82824465015244 L94 117.32361983897596 L95 118.81877351956263 L96 120.31368899755881 L97 121.80834835787061 L98 123.30273237921199 L99 124.79682044306577 L100 126.29059043673362 L101 127.78401865013853 L102 129.27707966602583 L103 130.76974624319826 L104 132.26198919240483 L105 133.7537772444877 L106 135.24507691038156 L107 136.73585233254335 L108 138.22606512737917 L109 139.7156742182243 L110 141.20463565842027 L111 142.6929024440239 L112 144.18042431567662 L113 145.66714754915418 L114 147.15301473411387 L115 148.63796454055563 L116 150.1219314725121 L117 151.60484560848923 L118 153.08663232818512 L119 154.56721202502825 L120 156.04649980409027 L121 157.52440516495273 L122 159.00083166913143 L123 160.4756765916983 L124 161.94883055677698 L125 163.42017715664107 L126 164.88959255419476 L127 166.35694506868535 L128 167.82209474456812 L129 169.284892903532 L130 170.7451816797904 L131 172.20279353884976 L132 173.65755078009093 L133 175.1092650236346 L134 176.55773668211017 L135 178.00275441811425 L136 179.44409458832538 L137 180.88152067543786 L138 182.31478270929338 L139 183.74361667881806 L140 185.1677439366224 L141 186.58687059838604 L142 188.00068693943211 L143 189.40886679119401 L144 190.81106694059153 L145 192.2069265356631 L146 193.5960665011402 L147 194.97808896800447 L148 196.35257672142671 L149 197.71909267185555 L150 199.07717935439126 L151 200.4263584619469 L152 201.7661304180615 L153 203.0959739955775 L154 204.41534598773038 L155 205.72368093850363 L156 207.02039093938617 L157 208.30486549990695 L158 209.57647149952018 L159 210.8345532285548 L160 212.07843252602325 L161 213.30740902209018 L162 214.52076049293092 L163 215.7177433355452 L164 216.89759316983185 L165 218.0595255748609 L166 219.20273696579943 L167 220.32640561734036 L168 221.42969283875757 L169 222.51174430484622 L170 223.5716915460153 L171 224.60865359967198 L172 225.62173882377894 L173 226.61004687208128 L174 227.5726708289965 L175 228.50869950054775 L176 229.4172198560139 L177 230.29731961318362 L178 231.148089958256 L179 231.96862838954883 L180 232.758041672286 L181 233.51544888986072 L182 234.23998457514824 L183 234.9308019036957 L184 235.5870759289881 L185 236.20800683850453 L186 236.79282320797762 L187 237.340785230179 L188 237.85118789370782 L189 238.3233640866838 L190 238.75668759996634 L191 239.15057600455373 L192 239.5044933781801 L193 239.81795285682463 L194 240.09051898788744 L195 240.3218098631567 L196 240.51149901138928 L197 240.6593170323251 L198 240.76505295623733 L199 240.82855531564837 L200 240.84973291858412 L201 240.82855531564837 L202 240.76505295623733 L203 240.6593170323251 L204 240.51149901138928 L205 240.3218098631567 L206 240.09051898788744 L207 239.81795285682463 L208 239.5044933781801 L209 239.15057600455373 L210 238.75668759996634 L211 238.3233640866838 L212 237.85118789370782 L213 237.340785230179 L214 236.79282320797762 L215 236.20800683850453 L216 235.5870759289881 L217 234.9308019036957 L218 234.23998457514824 L219 233.51544888986072 L220 232.758041672286 L221 231.96862838954883 L222 231.148089958256 L223 230.29731961318362 L224 229.4172198560139 L225 228.50869950054775 L226 227.5726708289965 L227 226.61004687208128 L228 225.62173882377894 L229 224.60865359967198 L230 223.5716915460153 L231 222.51174430484622 L232 221.42969283875757 L233 220.32640561734036 L234 219.20273696579943 L235 218.0595255748609 L236 216.89759316983185 L237 215.7177433355452 L238 214.52076049293092 L239 213.30740902209018 L240 212.07843252602325 L241 210.8345532285548 L242 209.57647149952018 L243 208.30486549990695 L244 207.02039093938617 L245 205.72368093850363 L246 204.41534598773038 L247 203.0959739955775 L248 201.7661304180615 L249 200.4263584619469 L250 199.07717935439126 L251 197.71909267185555 L252 196.35257672142671 L253 194.97808896800447 L254 193.5960665011402 L255 192.2069265356631 L256 190.81106694059153 L257 189.40886679119401 L258 188.00068693943211 L259 186.58687059838604 L260 185.1677439366224 L261 183.74361667881806 L262 182.31478270929338 L263 180.88152067543786 L264 179.44409458832538 L265 178.00275441811425 L266 176.55773668211017 L267 175.1092650236346 L268 173.65755078009093 L269 172.20279353884976 L270 170.7451816797904 L271 169.284892903532 L272 167.82209474456812 L273 166.35694506868535 L274 164.88959255419476 L275 163.42017715664107 L276 161.94883055677698 L277 160.4756765916983 L278 159.00083166913143 L279 157.52440516495273 L280 156.04649980409027 L281 154.56721202502825 L282 153.08663232818512 L283 151.60484560848923 L284 150.1219314725121 L285 148.63796454055563 L286 147.15301473411387 L287 145.66714754915418 L288 144.18042431567662 L289 142.6929024440239 L290 141.20463565842027 L291 139.7156742182243 L292 138.22606512737917 L293 136.73585233254335 L294 135.24507691038156 L295 133.7537772444877 L296 132.26198919240483 L297 130.76974624319826 L298 129.27707966602583 L299 127.78401865013853 L300 126.29059043673362 L301 124.79682044306577 L302 123.30273237921199 L303 121.80834835787061 L304 120.31368899755881 L305 118.81877351956263 L306 117.32361983897596 L307 115.82824465015244 L308 114.33266350687967 L309 112.8368908975715 L310 111.34094031576075 L311 109.84482432616147 L312 108.34855462655588 L313 106.85214210575077 L314 105.35559689783338 L315 103.8589284329471 L316 102.36214548479467 L317 100.86525621506678 L318 99.36826821498101 L319 97.87118854411005 L320 96.37402376666398 L321 94.87677998538481 L322 93.37946287320312 L323 91.88207770279513 L324 90.38462937417364 L325 88.88712244043762 L326 87.38956113179688 L327 85.89194937798248 L328 84.394290829147 L329 82.89658887535211 L330 81.39884666473438 L331 79.90106712043672 L332 78.40325295638524 L333 76.90540669198748 L334 75.40753066582391 L335 73.90962704839797 L336 72.41169785400882 L337 70.91374495180389 L338 69.41577007606656 L339 67.91777483579114 L340 66.41976072359125 L341 64.92172912398877 L342 63.42368132112341 L343 61.92561850592381 L344 60.42754178277539 L345 58.92945217572088 L346 57.431350634223975 L347 55.93323803852718 L348 54.43511520463136 L349 52.93698288892335 L350 51.438841792475046 L351 49.94069256503849 L352 48.44253580875619 L353 46.944372081607696 L354 45.446201900610276 L355 43.94802574479144 L356 42.44984405794838 L357 40.951657251210065 L358 39.453465705416136 L359 37.95526977332332 L360 36.457069781655605 L361 34.958866033004654 L362 33.460658807594484 L363 31.962448364918146 L364 30.46423494525635 L365 28.966018771086055 L366 27.467800048387403 L367 25.969578967855284 L368 24.471355706023132 L369 22.973130426305374 L370 21.474903279963428 L371 19.976674407001894 L372 18.478443936998872 L373 16.980211989875784 L374 15.48197867661139 L375 13.983744099902935 L376 12.4855083547792 L377 10.987271529168595 L378 9.489033704425424 L379 7.990794955818046 L380 6.492555352980105 L381 4.994314960329575 L382 3.4960738374565494 L383 1.9978320394823186 L384 0.4995896173923029 L385 -0.9986533816561405 L386 -2.496896914047909 L387 -3.995140939445946 L388 -5.493385420547099 L389 -6.9916303228542915 L390 -8.489875614468247 L391 -9.98812126589172 L392 -11.4863672498509 L393 -12.984613541127999 L394 -14.482860116407835 L395 -15.981106954135043 L396 -17.479354034381515 L397 -18.977601338725094 L398 -20.47584885013572 L399 -21.974096552871572 " stroke = "blue" stroke-width = "4" fill = "none" /></svg>