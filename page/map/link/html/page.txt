<script src = "https://cdnjs.cloudflare.com/ajax/libs/hammer.js/2.0.8/hammer.js"></script>

<h2>Link Maker</h2>
<table id = "inputtable">
    <tr>
       <td></td> <td class = "button">publish</td>
    </tr>
    <tr>
        <td>latlon: </td><td><input value = "38.889464, -77.035246"/></td>
    </tr>
    <tr>
        <td>latlon0:</td><td><input value = "38.889464, -77.035246"/></td>
    </tr>
    <tr>
        <td>@(x,y): </td><td><input style = "width:2em" value = "0,0"/> (units)</td>
    </tr>
    <tr>
        <td>unit: </td><td><input style = "width:2em" value = "555"/> feet</td>
    </tr>
    <tr>
        <td>Size:</td><td><input value = "50" style = "width:2em"/> feet</td>
    </tr>
    <tr>
        <td>Angle:</td><td><input value = "0" style = "width:2em"/> deg</td>
    </tr>
    <tr>
        <td>Text:</td><td> <input value = "link text"/></td>
    </tr>
    <tr>
        <td>Link:</td><td> <input value = "../"/></td>
    </tr>
</table>
<table id = "pantable">
    <tr><td>pan x</td></tr>
    <tr><td>pan y</td></tr>
    <tr><td>scale</td></tr>
    <tr><td>rotate</td></tr>
</table>
<a id = "newlink"></a>
<img id = "backgroundimage"/>
<script>

    inputs = document.getElementById("inputtable").getElementsByTagName("input");
    newlinkjson = {};
    newlinkjson.url = inputs[7].value;
    newlinkjson.text = inputs[6].value;
    newlinkjson.latlon = "38.889464, -77.035246";
    newlinkjson.rotation = 0;
    newlinkjson.fontfeet = 5000;
    unit  = 50;
    x0 = 0.5*innerWidth;
    y0 = 0.5*innerHeight;
    deltax = 0;
    deltay = 0;
    deltaw = 0;
    deltaangle = 0;
    
    currentFile = "../map/json/currentjson.txt";
    var httpc = new XMLHttpRequest();
    httpc.onreadystatechange = function() {
        if (this.readyState == 4 && this.status == 200) {
            filedata = this.responseText;
            currentJSON = JSON.parse(filedata);
            unit=currentJSON.unitpixels;
            document.getElementById("backgroundimage").src = currentJSON.imgurl;
            document.getElementById("backgroundimage").style.width = (currentJSON.unitpixels*currentJSON.imagew).toString() + "px";
            document.getElementById("backgroundimage").style.left = (0.5*innerWidth + currentJSON.unitpixels*currentJSON.imgleft).toString() + "px";
            document.getElementById("backgroundimage").style.top = (0.5*innerHeight + currentJSON.unitpixels*currentJSON.imgtop).toString() + "px";
            newlinkjson.latlon = currentJSON.latlon0;
            redraw();
        }
    };
    httpc.open("GET", "fileloader.php?filename=" + currentFile, true);
    httpc.send();

    //load a map, set background image...
    
    function redraw(){
        document.getElementById("newlink").href = newlinkjson.url;
        document.getElementById("newlink").innerHTML = newlinkjson.text;
        
        var xy = latlon2xy(newlinkjson.latlon);
        var xvar = parseFloat(xy.split(",")[0]);
        document.getElementById("newlink").style.left = (deltax + x0 + unit*xvar).toString() + "px";
        var yvar = parseFloat(xy.split(",")[1]);
        document.getElementById("newlink").style.top = (deltay + y0 - unit*yvar).toString() + "px";
        document.getElementById("newlink").style.fontSize = (deltaw + newlinkjson.fontfeet*unit/currentJSON.unitfeet).toString() + "px";
        document.getElementById("newlink").style.transform = "rotate(" + (deltaangle + newlinkjson.rotation).toString() + "deg)";
    
    }    
    
    
    function latlon2xy(latlonin) {
    
    //input to this function is a string of the form "lattitude,longitude", where lat and lon are in decimal degrees
    var lat0 = parseFloat(currentJSON.latlon0.split(",")[0]);   //lattitude to 10 meter precision
    var coslat = Math.cos(lat0*Math.PI/180);//convert to radians, take cosine of lattitude
    var lon0 =  parseFloat(currentJSON.latlon0.split(",")[1]);//longitude to 10 meter precision
    var unitfeet = currentJSON.unitfeet;//unit length in feet

    var digits = 1;//1;//0 digits = 555 feet, 1 is 55 feet, 2 is 5.5  feet
    var precision = Math.pow(10,digits);

    var lat1 = parseFloat(latlonin.split(",")[0]);
    var lon1 = parseFloat(latlonin.split(",")[1]);
    //from the original definition of the meter:
    //90 degrees lattitude = 10,000,000 meters = 32808399 feet
    //1 degree lattitude = 10,000,000 meters/90 = 111111.1 meters = 111 km
    //0.1 degree = 11 km
    //0.01 degree = 1.1 km
    //0.001 degree = 110 m
    //0.0001 degree = 11 m
    //1 meter = 3.28084 feet
    //1 degree lattitude = 111111.1(meters)*3.28084(feet/meter) = 364538 feet
    //1 degree longitude = 1 degre lattitude X cos(lattitude) = 283699 feet at 38.8895 N
    var deltaxfeet = Math.round((lon1 - lon0)*364538*coslat);//convert longitude difference to feet
    var deltayfeet = Math.round((lat1 - lat0)*364538);//convert lattitude difference to feet
    var deltax = Math.round(precision*deltaxfeet/unitfeet)/precision;//convert from feet to "units" based on unitfeet
    var deltay = Math.round(precision*deltayfeet/unitfeet)/precision;//convert from feet to "units" based on unitfeet
    return deltax.toString() + "," + deltay.toString();
}


pans = document.getElementById("pantable").getElementsByTagName("TD");

mc1 = new Hammer(pans[0]);
mc1.get('pan').set({ direction: Hammer.DIRECTION_ALL });
mc1.on("panleft panright panup pandown tap press", function(ev) {
    deltax = ev.deltaX;
    redraw();
});

mc2 = new Hammer(pans[1]);
mc2.get('pan').set({ direction: Hammer.DIRECTION_ALL });
mc2.on("panleft panright panup pandown tap press", function(ev) {
    deltay = ev.deltaX;
    redraw();
});

mc3 = new Hammer(pans[2]);
mc3.get('pan').set({ direction: Hammer.DIRECTION_ALL });
mc3.on("panleft panright panup pandown tap press", function(ev) {
    deltaw = ev.deltaX/5;
    redraw();
});

mc4 = new Hammer(pans[3]);
mc4.get('pan').set({ direction: Hammer.DIRECTION_ALL });
mc4.on("panleft panright panup pandown tap press", function(ev) {
    deltaangle = Math.PI*ev.deltaX/10;
    redraw();
});

</script>
<style>
#backgroundimage{
    position:absolute;
    width:500px;
    top:100px;
    z-index:-1;
}
.button{
    cursor:pointer;
}
.button:hover{
    background-color:green;
}
.button:active{
    background-color:yellow;
}
#pantable{
    position:absolute;
    top:5em;
    right:1em;
}
#pantable td{
    height:100px;
    width:300px;
    font-size:50px;
    border:solid;
    text-align:center;
}
#newlink{
    position:absolute;
}
</style>
